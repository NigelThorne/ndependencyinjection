<Window x:Class="TaskTimer.UI.TimerDialog" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:ns0="clr-namespace:AmmySidekick;assembly=AmmySidekick" Width="300" Height="230" MaxWidth="300" MinWidth="300" MaxHeight="230" MinHeight="230" ns0:Ammy.Register="/TaskTimer;component/UI/TimerDialog.g.xaml">
  <StackPanel Margin="10">
    <StackPanel Orientation="Horizontal">
      <TextBlock Text="Task: "/>
      <TextBlock FontWeight="DemiBold">
        <TextBlock.Text>
          <Binding Path="TaskName"/>
        </TextBlock.Text>
      </TextBlock>
    </StackPanel>
    <StackPanel Orientation="Horizontal">
      <TextBlock Text="Allocate Time: "/>
      <TextBlock FontWeight="DemiBold">
        <TextBlock.Text>
          <Binding Path="MinutesToAllocate" Converter="{x:Static ns0:ExpressionConverter.Instance}" ConverterParameter="&lt;expr id=&quot;0&quot;&gt;&lt;lambda isaction=&quot;False&quot;&gt;&lt;binary op=&quot;Sum&quot;&gt;&lt;staticcall method=&quot;WholeNumber&quot;&gt;&lt;typeinfo typename=&quot;TaskTimer.UI.Utils&quot; isarray=&quot;False&quot;&gt;&lt;/typeinfo&gt;&lt;parameter name=&quot;timespan&quot; type=&quot;System.Double&quot; /&gt;&lt;/staticcall&gt;&lt;prim val=&quot; minutes&quot; isnull=&quot;False&quot;&gt;&lt;typeinfo typename=&quot;System.String&quot; isarray=&quot;False&quot;&gt;&lt;/typeinfo&gt;&lt;/prim&gt;&lt;/binary&gt;&lt;parameter name=&quot;timespan&quot; type=&quot;System.Double&quot; /&gt;&lt;/lambda&gt;&lt;/expr&gt;"/>
        </TextBlock.Text>
      </TextBlock>
    </StackPanel>
    <TextBox Name="TaskNameBox" GotFocus="OnTaskNameFocus">
      <TextBox.Text>
        <Binding Path="TaskName"/>
      </TextBox.Text>
    </TextBox>
    <TextBox Name="Comment" Height="55" GotFocus="OnCommentFocus" TextWrapping="WrapWithOverflow" AcceptsReturn="True" AcceptsTab="False">
      <TextBox.Text>
        <Binding Path="Comment"/>
      </TextBox.Text>
    </TextBox>
    <Grid>
      <Grid.ColumnDefinitions>
        <ColumnDefinition/>
        <ColumnDefinition/>
        <ColumnDefinition/>
      </Grid.ColumnDefinitions>
      <Button Grid.Row="0" Grid.Column="0" Click="OnAddButtonClicked">Allocate to Task</Button>
      <Button Grid.Row="0" Grid.Column="1" Click="OnAddBreakClicked">Add Break</Button>
      <Button Grid.Row="0" Grid.Column="2" Click="OnRenameButtonClicked">Rename</Button>
    </Grid>
    <Slider TickFrequency="1" Minimum="0">
      <Slider.Maximum>
        <Binding Path="UnAllocatedTimeInMinutes"/>
      </Slider.Maximum>
      <Slider.Value>
        <Binding Path="MinutesToAllocate"/>
      </Slider.Value>
    </Slider>
    <StackPanel>
      <TextBlock>
        <TextBlock.Text>
          <Binding Path="UnAllocatedTime.TotalMinutes" Converter="{x:Static ns0:ExpressionConverter.Instance}" ConverterParameter="&lt;expr id=&quot;1&quot;&gt;&lt;lambda isaction=&quot;False&quot;&gt;&lt;binary op=&quot;Sum&quot;&gt;&lt;binary op=&quot;Sum&quot;&gt;&lt;prim val=&quot;Total Unallocated Time: &quot; isnull=&quot;False&quot;&gt;&lt;typeinfo typename=&quot;System.String&quot; isarray=&quot;False&quot;&gt;&lt;/typeinfo&gt;&lt;/prim&gt;&lt;staticcall method=&quot;WholeNumber&quot;&gt;&lt;typeinfo typename=&quot;TaskTimer.UI.Utils&quot; isarray=&quot;False&quot;&gt;&lt;/typeinfo&gt;&lt;parameter name=&quot;timespan&quot; type=&quot;System.Double&quot; /&gt;&lt;/staticcall&gt;&lt;/binary&gt;&lt;prim val=&quot; minutes&quot; isnull=&quot;False&quot;&gt;&lt;typeinfo typename=&quot;System.String&quot; isarray=&quot;False&quot;&gt;&lt;/typeinfo&gt;&lt;/prim&gt;&lt;/binary&gt;&lt;parameter name=&quot;timespan&quot; type=&quot;System.Double&quot; /&gt;&lt;/lambda&gt;&lt;/expr&gt;"/>
        </TextBlock.Text>
      </TextBlock>
      <TextBlock>
        <TextBlock.Text>
          <Binding Path="TimeToAllocateUpTo"/>
        </TextBlock.Text>
      </TextBlock>
      <TextBlock>
        <TextBlock.Text>
          <Binding Path="UnallocatedTimeInMinutes" Converter="{x:Static ns0:ExpressionConverter.Instance}" ConverterParameter="&lt;expr id=&quot;1&quot;&gt;&lt;lambda isaction=&quot;False&quot;&gt;&lt;binary op=&quot;Sum&quot;&gt;&lt;binary op=&quot;Sum&quot;&gt;&lt;prim val=&quot;Total Unallocated Time: &quot; isnull=&quot;False&quot;&gt;&lt;typeinfo typename=&quot;System.String&quot; isarray=&quot;False&quot;&gt;&lt;/typeinfo&gt;&lt;/prim&gt;&lt;staticcall method=&quot;WholeNumber&quot;&gt;&lt;typeinfo typename=&quot;TaskTimer.UI.Utils&quot; isarray=&quot;False&quot;&gt;&lt;/typeinfo&gt;&lt;parameter name=&quot;timespan&quot; type=&quot;System.Double&quot; /&gt;&lt;/staticcall&gt;&lt;/binary&gt;&lt;prim val=&quot; minutes&quot; isnull=&quot;False&quot;&gt;&lt;typeinfo typename=&quot;System.String&quot; isarray=&quot;False&quot;&gt;&lt;/typeinfo&gt;&lt;/prim&gt;&lt;/binary&gt;&lt;parameter name=&quot;timespan&quot; type=&quot;System.Double&quot; /&gt;&lt;/lambda&gt;&lt;/expr&gt;"/>
        </TextBlock.Text>
      </TextBlock>
    </StackPanel>
  </StackPanel>
</Window>